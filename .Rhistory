res_sel
mat
library(edgeR)
library(DESeq2)
library("pheatmap")
#https://molbiocloud.com/help/tiki-index.php?page=Differential-Expression-Analysis-Using-DESeq2#Differential_Expression_Analysis_Using_DESeq2
#res = read.table("/Volumes/Seagate/Backup-MAC_HD2/proj_Santosh/scripts/Trans.isoform.counts.matrix.AtgamFem_vs_AtgamMale.DESeq2.DE_results",sep="\t", header = TRUE, row.names = 1)
#res[ , !(names(res) %in% c("sampleA","sampleB","baseMeanA","baseMeanB") )]
#Importing the files
#outdir_plot="/Volumes/Seagate/Backup-MAC_HD2/proj_Asa/NG-14833_4.3_DEG_results/Results_plots/"
outdir_plot="/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/Results_plots/"
dir.create(file.path(outdir_plot), showWarnings = F, recursive = FALSE)
##################################################################################################
#allsamp_UP = c("AtgamFem-UP", "AtgamLarv-UP", "AtgamMale-UP")
#for (sampID_UP in allsamp_UP) {
#allsamp = c("Pas_vs_Reg", "Pas_vs_Tit", "Reg_vs_Tit")
#allsamp = c("GFP-v-HC-PRO")
allsamp = c("GFP-v-P12")
#allsamp = c("Mk-v-Delta_Inter_Mk-v-PMTVWT")
#all count table:
for (sampID in allsamp) {
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_Delta8K_911_anno_pars.tsv"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_PMTVWT_1500_anno_pars.tsv"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
dgeFull_mat <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_delta8K.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_PMTVWT.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.PMTVWT_vs_delta8K.DESeq2.count_matrix"
#res_sel = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, fill=FALSE)
res = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, comment.char="#", na.strings=".", stringsAsFactors=FALSE, quote="", fill=F)
read.mat = read.table(dgeFull_mat,sep="\t", header = TRUE, row.names = 1)
coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2","gt3"),each = 4),treatment = rep(c("delta8K","Mock","PMTVWT"),each = 4))
####
# Define the annotation
annotation_row = data.frame(res$sRNA_ID)
#4. Run DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = read.mat, colData = coldata, design = ~ treatment)
de.genes <- rownames(res)
#rld <- rlog(dds, blind=FALSE)
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
#vsd_sel <- vsd[de.genes,]
mat = assay(vsd)[ order(res$pvalue), ] # select the all genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
###################
# replace row names
rownames(mat) <- rownames(res)
# Optional, but to make the plot nicer:
df = as.data.frame(colData(vsd)[,c("treatment")]) # Create a dataframe with a column of the conditions
colnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
####################
## and plot the actual heatmap
#pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes.pdf", sep=""), annotation_col=df)
pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes_P5e-2_C1.0.DE.pdf", sep=""), annotation_col=df)
#########################################################################
}
annotation_col
df
mat
library(edgeR)
library(DESeq2)
library("pheatmap")
#https://molbiocloud.com/help/tiki-index.php?page=Differential-Expression-Analysis-Using-DESeq2#Differential_Expression_Analysis_Using_DESeq2
#res = read.table("/Volumes/Seagate/Backup-MAC_HD2/proj_Santosh/scripts/Trans.isoform.counts.matrix.AtgamFem_vs_AtgamMale.DESeq2.DE_results",sep="\t", header = TRUE, row.names = 1)
#res[ , !(names(res) %in% c("sampleA","sampleB","baseMeanA","baseMeanB") )]
#Importing the files
#outdir_plot="/Volumes/Seagate/Backup-MAC_HD2/proj_Asa/NG-14833_4.3_DEG_results/Results_plots/"
outdir_plot="/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/Results_plots/"
dir.create(file.path(outdir_plot), showWarnings = F, recursive = FALSE)
##################################################################################################
#allsamp_UP = c("AtgamFem-UP", "AtgamLarv-UP", "AtgamMale-UP")
#for (sampID_UP in allsamp_UP) {
#allsamp = c("Pas_vs_Reg", "Pas_vs_Tit", "Reg_vs_Tit")
#allsamp = c("GFP-v-HC-PRO")
allsamp = c("GFP-v-P12")
#allsamp = c("Mk-v-Delta_Inter_Mk-v-PMTVWT")
#all count table:
for (sampID in allsamp) {
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_Delta8K_911_anno_pars.tsv"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_PMTVWT_1500_anno_pars.tsv"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
dgeFull_mat <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_delta8K.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_PMTVWT.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.PMTVWT_vs_delta8K.DESeq2.count_matrix"
#res_sel = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, fill=FALSE)
res = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, comment.char="#", na.strings=".", stringsAsFactors=FALSE, quote="", fill=F)
read.mat = read.table(dgeFull_mat,sep="\t", header = TRUE, row.names = 1)
coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2","gt3"),each = 4),treatment = rep(c("delta8K","Mock","PMTVWT"),each = 4))
####
# Define the annotation
annotation_row = data.frame(res$sRNA_ID)
#4. Run DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = read.mat, colData = coldata, design = ~ treatment)
de.genes <- rownames(res)
#rld <- rlog(dds, blind=FALSE)
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
#vsd_sel <- vsd[de.genes,]
mat = assay(vsd)[ order(res$pvalue), ] # select the all genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
###################
# replace row names
rownames(mat) <- rownames(res)
# Optional, but to make the plot nicer:
df = as.data.frame(colData(vsd)[,c("treatment")]) # Create a dataframe with a column of the conditions
colnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
####################
## and plot the actual heatmap
#pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes.pdf", sep=""), annotation_col=df)
pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes_P5e-2_C1.0.DE.pdf", sep=""), annotation_col=df)
#########################################################################
}
library(edgeR)
library(DESeq2)
library("pheatmap")
#https://molbiocloud.com/help/tiki-index.php?page=Differential-Expression-Analysis-Using-DESeq2#Differential_Expression_Analysis_Using_DESeq2
#res = read.table("/Volumes/Seagate/Backup-MAC_HD2/proj_Santosh/scripts/Trans.isoform.counts.matrix.AtgamFem_vs_AtgamMale.DESeq2.DE_results",sep="\t", header = TRUE, row.names = 1)
#res[ , !(names(res) %in% c("sampleA","sampleB","baseMeanA","baseMeanB") )]
#Importing the files
#outdir_plot="/Volumes/Seagate/Backup-MAC_HD2/proj_Asa/NG-14833_4.3_DEG_results/Results_plots/"
outdir_plot="/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/Results_plots/"
dir.create(file.path(outdir_plot), showWarnings = F, recursive = FALSE)
##################################################################################################
#allsamp_UP = c("AtgamFem-UP", "AtgamLarv-UP", "AtgamMale-UP")
#for (sampID_UP in allsamp_UP) {
#allsamp = c("Pas_vs_Reg", "Pas_vs_Tit", "Reg_vs_Tit")
#allsamp = c("GFP-v-HC-PRO")
allsamp = c("GFP-v-P12")
#allsamp = c("Mk-v-Delta_Inter_Mk-v-PMTVWT")
#all count table:
for (sampID in allsamp) {
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_Delta8K_911_anno_pars.tsv"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_PMTVWT_1500_anno_pars.tsv"
dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
dgeFull_mat <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_delta8K.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_PMTVWT.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.PMTVWT_vs_delta8K.DESeq2.count_matrix"
#res_sel = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, fill=FALSE)
res = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, comment.char="#", na.strings=".", stringsAsFactors=FALSE, quote="", fill=F)
read.mat = read.table(dgeFull_mat,sep="\t", header = TRUE, row.names = 1)
coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2","gt3"),each = 4),treatment = rep(c("delta8K","Mock","PMTVWT"),each = 4))
####
# Define the annotation
annotation_row = data.frame(res$sRNA_ID)
#4. Run DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = read.mat, colData = coldata, design = ~ treatment)
de.genes <- rownames(res)
#rld <- rlog(dds, blind=FALSE)
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
#vsd_sel <- vsd[de.genes,]
mat = assay(vsd)[ order(res$pvalue), ] # select the all genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
###################
# replace row names
rownames(mat) <- rownames(res)
# Optional, but to make the plot nicer:
df = as.data.frame(colData(vsd)[,c("treatment")]) # Create a dataframe with a column of the conditions
colnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
####################
## and plot the actual heatmap
pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes.pdf", sep=""), annotation_col=df)
#pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes_P5e-2_C1.0.DE.pdf", sep=""), annotation_col=df)
#########################################################################
}
rownames(res)
rownames(mat)
mat
library("pheatmap")
#https://molbiocloud.com/help/tiki-index.php?page=Differential-Expression-Analysis-Using-DESeq2#Differential_Expression_Analysis_Using_DESeq2
#res = read.table("/Volumes/Seagate/Backup-MAC_HD2/proj_Santosh/scripts/Trans.isoform.counts.matrix.AtgamFem_vs_AtgamMale.DESeq2.DE_results",sep="\t", header = TRUE, row.names = 1)
#res[ , !(names(res) %in% c("sampleA","sampleB","baseMeanA","baseMeanB") )]
#Importing the files
#outdir_plot="/Volumes/Seagate/Backup-MAC_HD2/proj_Asa/NG-14833_4.3_DEG_results/Results_plots/"
outdir_plot="/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/Results_plots/"
dir.create(file.path(outdir_plot), showWarnings = F, recursive = FALSE)
##################################################################################################
#allsamp_UP = c("AtgamFem-UP", "AtgamLarv-UP", "AtgamMale-UP")
#for (sampID_UP in allsamp_UP) {
#allsamp = c("Pas_vs_Reg", "Pas_vs_Tit", "Reg_vs_Tit")
#allsamp = c("GFP-v-HC-PRO")
allsamp = c("GFP-v-P12")
#allsamp = c("Mk-v-Delta_Inter_Mk-v-PMTVWT")
dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
dgeFull_mat <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_delta8K.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_PMTVWT.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.PMTVWT_vs_delta8K.DESeq2.count_matrix"
#res_sel = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, fill=FALSE)
res = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, comment.char="#", na.strings=".", stringsAsFactors=FALSE, quote="", fill=F)
read.mat = read.table(dgeFull_mat,sep="\t", header = TRUE, row.names = 1)
coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2","gt3"),each = 4),treatment = rep(c("delta8K","Mock","PMTVWT"),each = 4))
####
# Define the annotation
annotation_row = data.frame(res$sRNA_ID)
#4. Run DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = read.mat, colData = coldata, design = ~ treatment)
de.genes <- rownames(res)
#rld <- rlog(dds, blind=FALSE)
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
#vsd_sel <- vsd[de.genes,]
mat = assay(vsd)[ order(res$pvalue), ] # select the all genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
##
mat
rownames(mat)
rowMeans(mat)
#all count table:
for (sampID in allsamp) {
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_Delta8K_911_anno_pars.tsv"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_PMTVWT_1500_anno_pars.tsv"
dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
dgeFull_mat <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_delta8K.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_PMTVWT.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.PMTVWT_vs_delta8K.DESeq2.count_matrix"
#res_sel = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, fill=FALSE)
res = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, comment.char="#", na.strings=".", stringsAsFactors=FALSE, quote="", fill=F)
read.mat = read.table(dgeFull_mat,sep="\t", header = TRUE, row.names = 1)
coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2","gt3"),each = 4),treatment = rep(c("delta8K","Mock","PMTVWT"),each = 4))
####
# Define the annotation
annotation_row = data.frame(res$sRNA_ID)
#4. Run DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = read.mat, colData = coldata, design = ~ treatment)
de.genes <- rownames(res)
#rld <- rlog(dds, blind=FALSE)
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
#vsd_sel <- vsd[de.genes,]
mat = assay(vsd)[ order(res$pvalue), ] # select the all genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
###################
# replace row names
#rownames(mat) <- rownames(res)
# Optional, but to make the plot nicer:
df = as.data.frame(colData(vsd)[,c("treatment")]) # Create a dataframe with a column of the conditions
colnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
####################
## and plot the actual heatmap
pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes.pdf", sep=""), annotation_col=df)
#pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes_P5e-2_C1.0.DE.pdf", sep=""), annotation_col=df)
#########################################################################
}
vsd[de.genes,]
de.genes
#res = read.table("/Volumes/Seagate/Backup-MAC_HD2/proj_Santosh/scripts/Trans.isoform.counts.matrix.AtgamFem_vs_AtgamMale.DESeq2.DE_results",sep="\t", header = TRUE, row.names = 1)
#res[ , !(names(res) %in% c("sampleA","sampleB","baseMeanA","baseMeanB") )]
#Importing the files
#outdir_plot="/Volumes/Seagate/Backup-MAC_HD2/proj_Asa/NG-14833_4.3_DEG_results/Results_plots/"
outdir_plot="/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/Results_plots/"
dir.create(file.path(outdir_plot), showWarnings = F, recursive = FALSE)
##################################################################################################
#allsamp_UP = c("AtgamFem-UP", "AtgamLarv-UP", "AtgamMale-UP")
#for (sampID_UP in allsamp_UP) {
#allsamp = c("Pas_vs_Reg", "Pas_vs_Tit", "Reg_vs_Tit")
#allsamp = c("GFP-v-HC-PRO")
allsamp = c("GFP-v-P12")
#allsamp = c("Mk-v-Delta_Inter_Mk-v-PMTVWT")
#all count table:
for (sampID in allsamp) {
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_Delta8K_911_anno_pars.tsv"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_PMTVWT_1500_anno_pars.tsv"
dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
dgeFull_mat <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_delta8K.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_PMTVWT.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.PMTVWT_vs_delta8K.DESeq2.count_matrix"
#res_sel = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, fill=FALSE)
res = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, comment.char="#", na.strings=".", stringsAsFactors=FALSE, quote="", fill=F)
read.mat = read.table(dgeFull_mat,sep="\t", header = TRUE, row.names = 1)
coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2","gt3"),each = 4),treatment = rep(c("delta8K","Mock","PMTVWT"),each = 4))
####
# Define the annotation
annotation_row = data.frame(res$sRNA_ID)
#4. Run DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = read.mat, colData = coldata, design = ~ treatment)
de.genes <- rownames(res)
#rld <- rlog(dds, blind=FALSE)
#vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
vsd <- vst(dds, blind=FALSE)
vsd <- vsd[de.genes,]
mat = assay(vsd)[ order(res$pvalue), ] # select the all genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
###################
# replace row names
#rownames(mat) <- rownames(res)
# Optional, but to make the plot nicer:
df = as.data.frame(colData(vsd)[,c("treatment")]) # Create a dataframe with a column of the conditions
colnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
####################
## and plot the actual heatmap
pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes.pdf", sep=""), annotation_col=df)
#pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes_P5e-2_C1.0.DE.pdf", sep=""), annotation_col=df)
#########################################################################
}
dds
res
de.genes
vsd[de.genes,]
vst(dds, blind=FALSE)
#rld <- rlog(dds, blind=FALSE)
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
#https://molbiocloud.com/help/tiki-index.php?page=Differential-Expression-Analysis-Using-DESeq2#Differential_Expression_Analysis_Using_DESeq2
#res = read.table("/Volumes/Seagate/Backup-MAC_HD2/proj_Santosh/scripts/Trans.isoform.counts.matrix.AtgamFem_vs_AtgamMale.DESeq2.DE_results",sep="\t", header = TRUE, row.names = 1)
#res[ , !(names(res) %in% c("sampleA","sampleB","baseMeanA","baseMeanB") )]
#Importing the files
#outdir_plot="/Volumes/Seagate/Backup-MAC_HD2/proj_Asa/NG-14833_4.3_DEG_results/Results_plots/"
outdir_plot="/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/Results_plots/"
dir.create(file.path(outdir_plot), showWarnings = F, recursive = FALSE)
##################################################################################################
#allsamp_UP = c("AtgamFem-UP", "AtgamLarv-UP", "AtgamMale-UP")
#for (sampID_UP in allsamp_UP) {
#allsamp = c("Pas_vs_Reg", "Pas_vs_Tit", "Reg_vs_Tit")
#allsamp = c("GFP-v-HC-PRO")
allsamp = c("GFP-v-P12")
#allsamp = c("Mk-v-Delta_Inter_Mk-v-PMTVWT")
#all count table:
for (sampID in allsamp) {
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_Delta8K_911_anno_pars.tsv"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_PMTVWT_1500_anno_pars.tsv"
dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
dgeFull_mat <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_P12.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_delta8K.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_PMTVWT.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.PMTVWT_vs_delta8K.DESeq2.count_matrix"
#res_sel = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, fill=FALSE)
res = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, comment.char="#", na.strings=".", stringsAsFactors=FALSE, quote="", fill=F)
read.mat = read.table(dgeFull_mat,sep="\t", header = TRUE, row.names = 1)
coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","P12"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2","gt3"),each = 4),treatment = rep(c("delta8K","Mock","PMTVWT"),each = 4))
####
# Define the annotation
annotation_row = data.frame(res$sRNA_ID)
#4. Run DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = read.mat, colData = coldata, design = ~ treatment)
de.genes <- rownames(res)
#rld <- rlog(dds, blind=FALSE)
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
#vsd <- vst(dds, blind=FALSE)
vsd <- vsd[de.genes,]
mat = assay(vsd)[ order(res$pvalue), ] # select the all genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
###################
# replace row names
#rownames(mat) <- rownames(res)
# Optional, but to make the plot nicer:
df = as.data.frame(colData(vsd)[,c("treatment")]) # Create a dataframe with a column of the conditions
colnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
####################
## and plot the actual heatmap
pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes.pdf", sep=""), annotation_col=df)
#pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes_P5e-2_C1.0.DE.pdf", sep=""), annotation_col=df)
#########################################################################
}
#Importing the files
#outdir_plot="/Volumes/Seagate/Backup-MAC_HD2/proj_Asa/NG-14833_4.3_DEG_results/Results_plots/"
outdir_plot="/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/Results_plots/"
dir.create(file.path(outdir_plot), showWarnings = F, recursive = FALSE)
##################################################################################################
#allsamp_UP = c("AtgamFem-UP", "AtgamLarv-UP", "AtgamMale-UP")
#for (sampID_UP in allsamp_UP) {
#allsamp = c("Pas_vs_Reg", "Pas_vs_Tit", "Reg_vs_Tit")
#allsamp = c("GFP-v-HC-PRO")
allsamp = c("GFP-v-HC-PRO")
#allsamp = c("Mk-v-Delta_Inter_Mk-v-PMTVWT")
#all count table:
for (sampID in allsamp) {
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_Delta8K_911_anno_pars.tsv"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_PMTVWT_1500_anno_pars.tsv"
dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_HC-PRO.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_HC-PRO.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_HC-PRO.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_HC-PRO.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
dgeFull_mat <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_HC-PRO.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_delta8K.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_PMTVWT.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.PMTVWT_vs_delta8K.DESeq2.count_matrix"
#res_sel = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, fill=FALSE)
res = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, comment.char="#", na.strings=".", stringsAsFactors=FALSE, quote="", fill=F)
read.mat = read.table(dgeFull_mat,sep="\t", header = TRUE, row.names = 1)
coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","HC.PRO"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","HC-PRO"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2","gt3"),each = 4),treatment = rep(c("delta8K","Mock","PMTVWT"),each = 4))
####
# Define the annotation
annotation_row = data.frame(res$sRNA_ID)
#4. Run DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = read.mat, colData = coldata, design = ~ treatment)
de.genes <- rownames(res)
#rld <- rlog(dds, blind=FALSE)
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
#vsd <- vst(dds, blind=FALSE)
vsd <- vsd[de.genes,]
mat = assay(vsd)[ order(res$pvalue), ] # select the all genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
###################
# replace row names
#rownames(mat) <- rownames(res)
# Optional, but to make the plot nicer:
df = as.data.frame(colData(vsd)[,c("treatment")]) # Create a dataframe with a column of the conditions
colnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
####################
## and plot the actual heatmap
pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes.pdf", sep=""), annotation_col=df)
#pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes_P5e-2_C1.0.DE.pdf", sep=""), annotation_col=df)
#########################################################################
}
#allsamp = c("Pas_vs_Reg", "Pas_vs_Tit", "Reg_vs_Tit")
#allsamp = c("GFP-v-HC-PRO")
allsamp = c("GFP-v-HC-PRO")
#allsamp = c("Mk-v-Delta_Inter_Mk-v-PMTVWT")
#all count table:
for (sampID in allsamp) {
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_Delta8K_911_anno_pars.tsv"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/RNA-seq_2020/SL-2400_6.0_Venn-diagram_P5e-2_FC1/venn_DESeq2.DE_results.P5e-2_C1.0_PMTVWT_1500_anno_pars.tsv"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_HC-PRO.DESeq2.DE_results"
dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_HC-PRO.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_HC-PRO.DESeq2.DE_results"
#dgeFull_ann <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_HC-PRO.DESeq2.DE_results.P5e-2_C1.0.DE.subset"
###
dgeFull_mat <- "/Volumes/Mac_HD2/proj_Ramesh/Small-RNA_Review-paper/DESeq2_genes_sel-sRNA59/NbC_salmon_raw-counts_sel-sRNA59.matrix.GFP_vs_HC-PRO.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_delta8K.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.Mock_vs_PMTVWT.DESeq2.count_matrix"
#dgeFull_mat <- "/Volumes/Seagate/Backup-MAC_HD2/proj_Ramesh/RNA-seq_2020/DESeq2_genes/Express_counts_all_Mock-PMTVWT-delta8k.matrix.PMTVWT_vs_delta8K.DESeq2.count_matrix"
#res_sel = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, fill=FALSE)
res = read.table(dgeFull_ann,sep="\t", header = TRUE, row.names = 1, comment.char="#", na.strings=".", stringsAsFactors=FALSE, quote="", fill=F)
read.mat = read.table(dgeFull_mat,sep="\t", header = TRUE, row.names = 1)
coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","HC.PRO"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2"),each = 3),treatment = rep(c("GFP","HC-PRO"),each = 3))
#coldata = data.frame(row.names = colnames(read.mat),group = rep(c("gt1","gt2","gt3"),each = 4),treatment = rep(c("delta8K","Mock","PMTVWT"),each = 4))
####
# Define the annotation
annotation_row = data.frame(res$sRNA_ID)
#4. Run DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = read.mat, colData = coldata, design = ~ treatment)
de.genes <- rownames(res)
#rld <- rlog(dds, blind=FALSE)
vsd <- varianceStabilizingTransformation(dds, blind=FALSE)
#vsd <- vst(dds, blind=FALSE)
vsd <- vsd[de.genes,]
mat = assay(vsd)[ order(res$pvalue), ] # select the all genes with the lowest padj
mat = mat - rowMeans(mat) # Subtract the row means from each value
###################
# replace row names
#rownames(mat) <- rownames(res)
# Optional, but to make the plot nicer:
df = as.data.frame(colData(vsd)[,c("treatment")]) # Create a dataframe with a column of the conditions
colnames(df) = "condition" # Rename the column header
rownames(df) = colnames(mat) # add rownames
####################
## and plot the actual heatmap
#pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes.pdf", sep=""), annotation_col=df)
pheatmap(mat, cellwidth = 30, cellheight = 12, fontsize = 10, filename = paste(outdir_plot,sampID,"_Heatmap-Diff-exp-genes_P5e-2_C1.0.DE.pdf", sep=""), annotation_col=df)
#########################################################################
}
